/*
 * empTraining.java
 *
 * Created on April 22, 2014, 2:42 PM
 */

package hrms;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author  user1
 */
public class empTraining extends javax.swing.JInternalFrame {
    
    /** Creates new form empTraining */
    public empTraining() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jemp = new javax.swing.JTextField();
        jtp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jsk = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jst = new javax.swing.JTextField();
        jen = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jr = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        search = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jCmbDept = new javax.swing.JComboBox();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Andalus", 1, 24));
        jLabel1.setText("TRAINING DETAILS");

        jLabel2.setText("Employee ID");

        jemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jempActionPerformed(evt);
            }
        });
        jemp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jempKeyPressed(evt);
            }
        });

        jtp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtpKeyPressed(evt);
            }
        });

        jLabel4.setText("Training Project");

        jLabel3.setText("Department");

        jd.setEditable(false);
        jd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdActionPerformed(evt);
            }
        });

        jLabel5.setText("Skill");

        jsk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jskKeyPressed(evt);
            }
        });

        jLabel6.setText("Start Date");

        jst.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jstKeyPressed(evt);
            }
        });

        jen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jenKeyPressed(evt);
            }
        });

        jLabel7.setText("End Date");

        jr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jrKeyPressed(evt);
            }
        });

        jLabel8.setText("Result");

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jCmbDept.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        jCmbDept.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCmbDeptItemStateChanged(evt);
            }
        });
        jCmbDept.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCmbDeptKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jsk, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                            .addComponent(jtp, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                            .addComponent(jemp, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                            .addComponent(jst, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                            .addComponent(jen, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                            .addComponent(jr, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jCmbDept, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addComponent(jd, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(add)
                        .addGap(39, 39, 39)
                        .addComponent(search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addComponent(edit)
                        .addGap(33, 33, 33)
                        .addComponent(delete)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(77, 77, 77))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCmbDept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jsk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete)
                    .addComponent(add)
                    .addComponent(edit)
                    .addComponent(search))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jempActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jempActionPerformed

    private void jdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jdActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
      try {
           String emid = jemp.getText().trim();
           String trainp = jtp.getText().trim();
           String depart = jd.getText().trim();
           String skill = jsk.getText().trim();
           String startdate = jst.getText().trim();
           String end = jen.getText().trim();
           String result= jr.getText().trim();
           if(jemp.getText().equals("")||jtp.getText().equals("")||jd.getText().equals("")||jsk.getText().equals("")||
           jst.getText().equals("")||jen.getText().equals("")||jr.getText().equals("")) {
                JOptionPane.showMessageDialog(rootPane,"You must enter values ");
           }
           else {
            System.out.print(emid);
            System.out.print(trainp);
            System.out.print(depart);
            System.out.print(skill);
            System.out.print(startdate);
            System.out.print(end);
            System.out.print(result);
            boolean isExist = isValidEmp(emid);
        if(isExist){
          java.sql.Statement st = new Main().hrmsDatabase().createStatement();
           int committed = st.executeUpdate("insert into traindetails(empid,trainp,depar,skill,startdate,edate,result)values('" + emid + "','"+trainp+"','"+depart+"','"+skill+"','"+startdate+"','"+end+"','"+result+"')");                                   
           if(committed>=1)
        {
            System.out.print("Executed");
            JOptionPane.showMessageDialog(rootPane,"Saved!");
        }
        else{
            System.out.print("No");
        }
           }
        else{
               JOptionPane.showMessageDialog(rootPane,"Invalid Entry!"); 
            }
         }
       }
      catch(Exception e)
       {
           System.out.print(e.getMessage());
           JOptionPane.showMessageDialog(rootPane,e.getMessage());
       }
}//GEN-LAST:event_addActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
    String str = JOptionPane.showInputDialog(null, "Enter Employee ID : ", "HRMS",1);
        if(str==null)
		System.exit(0);
       String empid = str;
         System.out.print(empid);
         try
            {
            java.sql.Statement st=new Main().hrmsDatabase().createStatement();
            String sql="select * from traindetails where empid='"+empid+"'";
            System.out.print(sql);
            ResultSet rs=st.executeQuery(sql);
             if(rs.next())
                {
                System.out.print("Executed");
                jemp.setText(rs.getString(1));
                jemp.disable();
                jtp.setText(rs.getString(2));
                jd.setText(rs.getString(3));
                jsk.setText(rs.getString(4));
                jst.setText(rs.getString(5));
                jen.setText(rs.getString(6));
                jr.setText(rs.getString(7));
                }
             else {
                System.out.print("No");
              }
            }
        catch(Exception e)
        {
            System.out.print(e.getMessage());
             System.out.print("yyy");
             JOptionPane.showMessageDialog(rootPane,e.getMessage());
        }
    }//GEN-LAST:event_searchActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
      try{
            jemp.disable();
            String emid = jemp.getText().trim();
            String trainp = jtp.getText().trim();
            String depart = jd.getText().trim();
            String skill = jsk.getText().trim();
            String startdate = jst.getText().trim();
            String end = jen.getText().trim();
            String result = jr.getText().trim();
             System.out.print(emid);
            System.out.print(trainp);
            System.out.print(depart);
            System.out.print(skill);
            System.out.print(startdate);
            System.out.print(end);
            System.out.print(result);
             boolean isExist = isValidEmp(emid);
        if(isExist){
      java.sql.Statement st = new Main().hrmsDatabase().createStatement();
            int committed = st.executeUpdate("update traindetails set trainp = '" + trainp + "',depar = '" + depart + "',skill = '" + skill+ "',startdate = '" + startdate+ "',edate = '" + end+ "',result = '" +result + "'");                                   
        if(committed>=1)
        {
            System.out.print("Executed");
            JOptionPane.showMessageDialog(rootPane,"Edited!");
        }
        else{
            System.out.print("No");
        }
        }
        else{
             JOptionPane.showMessageDialog(rootPane,"Invalid Entry"); 
            }
        }
        catch(Exception e)
       {
           System.out.print(e.getMessage());
           JOptionPane.showMessageDialog(rootPane,e.getMessage());
       }  
    }//GEN-LAST:event_editActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
      try {
            String str = JOptionPane.showInputDialog(null, "Enter Employee ID : ", "HRMS", 1);
            if (str == null) {
                System.exit(0);
            }
            String emid = str;
            System.out.print(emid);
            java.sql.Statement st = new Main().hrmsDatabase().createStatement();
            int committed = st.executeUpdate("delete from traindetails where empid='" + emid + "'");
            if(committed>=1)
            {
                System.out.print("Executed");
            }else
            {
              System.out.print("No");
            }
            JOptionPane.showMessageDialog(rootPane,"Deleted");
            jemp.setText("");
            jtp.setText("");
            jd.setText("");
            jsk.setText("");
            jst.setText("");
            jen.setText("");                                         
           jr.setText("");
      }
           
        
    catch (SQLException ex) {
            Logger.getLogger(empQualification.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_deleteActionPerformed

    private void jempKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jempKeyPressed
        perform1 p1 = new perform1();
            String num1 = "Alpha";
            String num2 = "Numeric";
            String num3 = "Alphanumeric";
            p1.dis(jemp, evt, num2);
    }//GEN-LAST:event_jempKeyPressed

    private void jtpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtpKeyPressed
       perform1 p1 = new perform1();
            String num1 = "Alpha";
            String num2 = "Numeric";
            String num3 = "Alphanumeric";
            p1.dis(jtp, evt, num3);
    }//GEN-LAST:event_jtpKeyPressed

    private void jCmbDeptKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCmbDeptKeyPressed
        
}//GEN-LAST:event_jCmbDeptKeyPressed

    private void jCmbDeptItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCmbDeptItemStateChanged
    try{
      {            
            java.sql.Statement st=new Main().hrmsDatabase().createStatement();
            ResultSet rs=st.executeQuery("select * from depdetails where dcode='"+(String)jCmbDept.getSelectedItem()+"'");
           if(rs.next())
            {
              jd.setText(rs.getString("dname"));      
            }
            rs.close();
            st.close();
      }          
       } 
        catch(Exception e)
        {
            System.out.print(e.getMessage());
             System.out.print("yyy");
        }
    }/*
        } catch (SQLException ex) {//GEN-LAST:event_jCmbDeptItemStateChanged
        }
     */
    private void jskKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jskKeyPressed
        perform1 p1 = new perform1();
            String num1 = "Alpha";
            String num2 = "Numeric";
            String num3 = "Alphanumeric";
            p1.dis(jsk, evt, num1);
    }//GEN-LAST:event_jskKeyPressed

    private void jstKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jstKeyPressed
        if (evt.getKeyChar()==evt.VK_ENTER)
         {
              String str=jst.getText();
             String sub=jst.getText().substring(0,4).toString();
             JOptionPane.showMessageDialog(null,sub);
              if(isValidDate(str))
        { 
                  //    System.out.println("valid");    
                
              
           }   
           else  
           {  
               JOptionPane.showMessageDialog(null,"Invalid Date");
           }   
         } 
    }//GEN-LAST:event_jstKeyPressed

    private void jenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jenKeyPressed
        if (evt.getKeyChar()==evt.VK_ENTER)
         {
              String str=jen.getText();
             String sub=jen.getText().substring(0,4).toString();
             JOptionPane.showMessageDialog(null,sub);
              if(isValidDate(str))
        { 
                  //    System.out.println("valid");    
                
              
           }   
           else  
           {  
               JOptionPane.showMessageDialog(null,"Invalid Date");
           }   
         } 
    }//GEN-LAST:event_jenKeyPressed

    private void jrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrKeyPressed
        perform1 p1 = new perform1();
            String num1 = "Alpha";
            String num2 = "Numeric";
            String num3 = "Alphanumeric";
            p1.dis(jr, evt, num1);
    }//GEN-LAST:event_jrKeyPressed
   public static boolean  isValidDate(String date){  
            boolean isValid = false;  
            //String expression = "^[0-1][1-9][- / ]?(0[1-9]|[12][0-9]|3[01])[- /]?(18|19|20|21)\\d{2}$";  
            //String expression = "(0?[1-9]|[12][0-9]|3[01])/(0?[1-9]|1[012])/((19|20)\\d\\d)";  
            String expression = "((19|20)\\d\\d)-(0?[01-09]|1[012])-(0?[01-09]|[12][0-9]|3[01])";  
            /* 
            * ^[0-1][1-9] : The month starts with a 0 and a digit between 1 and 9 
            * [- / ]?: Followed by  an optional "-" or "/". 
          * (0[1-9]|[12][0-9]|3[01]) : The day part must be either between 01-09, or 10-29 or 30-31. 
          * [- / ]?: Day part will be followed by  an optional "-" or "/". 
          * (18|19|20|21)\\d{2}$ : Year begins with either 18, 19, 20 or 21 and ends with two digits. 
          */  
          CharSequence inputStr = date;  
          Pattern pattern = Pattern.compile(expression,Pattern.CASE_INSENSITIVE);  
          Matcher matcher = pattern.matcher(inputStr);  
          if(matcher.matches()){  
              isValid = true;  
          }  
          return isValid;  
      } 
     public static boolean  isValidEmp(String empId) throws SQLException{  
            boolean isExist = false; 
            java.sql.Statement st = new Main().hrmsDatabase().createStatement();
            String sql= "select * from empdetails where empid='"+empId+"'";
            ResultSet rs=st.executeQuery(sql);
            if(rs.next()){
                isExist = true;
            }
            return isExist;  
      }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JComboBox jCmbDept;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jd;
    private javax.swing.JTextField jemp;
    private javax.swing.JTextField jen;
    private javax.swing.JTextField jr;
    private javax.swing.JTextField jsk;
    private javax.swing.JTextField jst;
    private javax.swing.JTextField jtp;
    private javax.swing.JButton search;
    // End of variables declaration//GEN-END:variables
    
}
